import React, { useState } from 'react';
import { useCart } from '../../context/CartContext';
import "./Catalog.css"

function Catalog() {
  const { addToCart } = useCart();
  
  // –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç–∏ –∫ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º:');
  
  const [products] = useState([
    {
      id: 1,
      name: "–•–æ–º—è–∫ –î–∂—É–Ω–≥–∞—Ä—Å–∫–∏–π",
      category: "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
      price: 1500,
      image: "/images/hamster.jpg",
      description: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ö–æ–º—è–∫, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–µ—Ç–µ–π"
    },
    {
      id: 2,
      name: "–ú–æ—Ä—Å–∫–∞—è —Å–≤–∏–Ω–∫–∞",
      category: "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
      price: 2500,
      image: "/images/guinea-pig.jpg",
      description: "–°–ø–æ–∫–æ–π–Ω–∞—è –∏ –ª–∞—Å–∫–æ–≤–∞—è –º–æ—Ä—Å–∫–∞—è —Å–≤–∏–Ω–∫–∞"
    },
    {
      id: 3,
      name: "–ö—Ä–æ–ª–∏–∫ –∫–∞—Ä–ª–∏–∫–æ–≤—ã–π",
      category: "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
      price: 3500,
      image: "/images/rabbit.jpg",
      description: "–ú–∞–ª–µ–Ω—å–∫–∏–π –∏ –ø—É—à–∏—Å—Ç—ã–π –∫—Ä–æ–ª–∏–∫"
    },
    {
      id: 4,
      name: "–ö–æ—Ä–º –¥–ª—è —Ö–æ–º—è–∫–æ–≤ Premium",
      category: "–ö–æ—Ä–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 450,
      image: "/images/hamster-food.jpg",
      description: "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ—Ä–º —Å –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏"
    },
    {
      id: 5,
      name: "–ö–æ—Ä–º –¥–ª—è –º–æ—Ä—Å–∫–∏—Ö —Å–≤–∏–Ω–æ–∫",
      category: "–ö–æ—Ä–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 380,
      image: "/images/guinea-pig-food.jpg",
      description: "–°–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ –∏ –≥—Ä–∞–Ω—É–ª—ã"
    },
    {
      id: 6,
      name: "–ö–æ—Ä–º –¥–ª—è –∫—Ä–æ–ª–∏–∫–æ–≤",
      category: "–ö–æ—Ä–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 520,
      image: "/images/rabbit-food.jpg",
      description: "–°–µ–Ω–æ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≥—Ä–∞–Ω—É–ª—ã"
    },
    {
      id: 7,
      name: "–ö–ª–µ—Ç–∫–∞ –¥–ª—è —Ö–æ–º—è–∫–∞",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 1200,
      image: "/images/hamster-cage.jpg",
      description: "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —Å –∫–æ–ª–µ—Å–æ–º"
    },
    {
      id: 8,
      name: "–î–æ–º–∏–∫ –¥–ª—è –º–æ—Ä—Å–∫–æ–π —Å–≤–∏–Ω–∫–∏",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 800,
      image: "/images/guinea-pig-house.jpg",
      description: "–£—é—Ç–Ω—ã–π –¥–æ–º–∏–∫ –¥–ª—è –æ—Ç–¥—ã—Ö–∞"
    },
    {
      id: 9,
      name: "–ò–≥—Ä—É—à–∫–∏ –¥–ª—è –∫—Ä–æ–ª–∏–∫–∞",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 650,
      image: "/images/rabbit-toys.jpg",
      description: "–ù–∞–±–æ—Ä –∏–≥—Ä—É—à–µ–∫ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä"
    },
    {
      id: 10,
      name: "–ü–æ–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 350,
      image: "/images/water-bottle.jpg",
      description: "–£–¥–æ–±–Ω–∞—è –ø–æ–∏–ª–∫–∞ —Å –∫–∞–ø–µ–ª—å–Ω–∏—Ü–µ–π"
    },
    {
      id: 11,
      name: "–ö–æ—Ä–º—É—à–∫–∞ –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 280,
      image: "/images/food-bowl.jpg",
      description: "–¢—è–∂–µ–ª–∞—è –∫–æ—Ä–º—É—à–∫–∞, –Ω–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω–µ—Ç—Å—è"
    },
    {
      id: 12,
      name: "–ü–æ–¥—Å—Ç–∏–ª–∫–∞ –¥–ª—è –∫–ª–µ—Ç–∫–∏",
      category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
      price: 180,
      image: "/images/bedding.jpg",
      description: "–ú—è–≥–∫–∞—è –ø–æ–¥—Å—Ç–∏–ª–∫–∞ –∏–∑ –æ–ø–∏–ª–æ–∫"
    }
  ]);

  // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
  console.log('–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', products);

  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');

  const categories = ['–í—Å–µ', '–ñ–∏–≤–æ—Ç–Ω—ã–µ', '–ö–æ—Ä–º–∞ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö'];

  const filteredProducts = selectedCategory === '–í—Å–µ' 
    ? products 
    : products.filter(product => product.category === selectedCategory);

  const handleAddToCart = (product) => {
    addToCart(product);
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
  };

  return (
    <div className='catalogdiv'>
      <h2>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</h2>
      
      <div className="category-filters">
        {categories.map(category => (
          <button
            key={category}
            className={`category-filter ${selectedCategory === category ? 'active' : ''}`}
            onClick={() => setSelectedCategory(category)}
          >
            {category}
          </button>
        ))}
      </div>

      <div className="products-grid">
        {filteredProducts.map(product => (
          <div key={product.id} className="product-card">
            <div className="product-image">
              <img 
                src={product.image} 
                alt={product.name}
                onLoad={() => console.log(`–ö–∞—Ä—Ç–∏–Ω–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ${product.image}`)}
                onError={(e) => {
                  console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏: ${product.image}`);
                  e.target.style.display = 'none';
                  e.target.nextSibling.style.display = 'flex';
                }}
              />
              <div 
                className="image-placeholder"
                style={{ 
                  display: 'none',
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  width: '100%',
                  height: '100%',
                  background: '#f5f5f5',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '3rem',
                  color: '#ccc'
                }}
              >
                üñºÔ∏è
              </div>
            </div>
            <div className="product-info">
              <h3 className="product-name">{product.name}</h3>
              <p className="product-description">{product.description}</p>
              <div className="product-price">{product.price} ‚ÇΩ</div>
              <button 
                className="add-to-cart-btn"
                onClick={() => handleAddToCart(product)}
              >
                –í –∫–æ—Ä–∑–∏–Ω—É
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default Catalog;